#!/bin/bash
s=0
i=0
n=0
u=0
p=0
k=0
f=0
tmp_f=""
error=0
File=$HOME"/.young.conf"
# 帮助信息
help(){
	echo -e "\033[1;32m帮助\033[0m："
	echo -e "	[\033[1;31m必选\033[0m]"
	echo -e "		[\033[1;36m无\033[0m]"
	echo -e "	[\033[1;31m可选\033[0m]"
	echo -e "		[\033[1;36m-f File\033[0m]	\033[1;32m配置文件位置\033[0m"
	echo -e "		[\033[1;36m-k\033[0m]		\033[1;32mKeeplive\033[0m"
	echo -e "		[\033[1;36m-s Server \n		 -i Ip \n		 -n Name \n		 -u User \n		 -p Passwd\033[0m]	\033[1;32m登录信息（不使用配置文件）\033[0m"
	echo -e "	[\033[1;31m其他\033[0m]"
	echo -e "		[\033[1;36m-h\033[0m]	\033[1;32m帮助\033[0m"
	echo -e "\033[1;32m版本\033[0m："
	echo -e "	\033[1;31mBeta\033[0m:\033[1;36m17.10.22\033[0m"
}
# 选项 参数 检查
check(){
	while getopts :s:i:n:u:p:khf: opt
	do
		case $opt in
			s)
				s=1
				tmp_s=$OPTARG
				;;
			i)
				i=1
				tmp_i=$OPTARG
				;;
			n)
				n=1
				tmp_n=$OPTARG
				;;
			u)
				u=1
				tmp_u=$OPTARG
				;;
			p)
				p=1
				tmp_p=$OPTARG
				;;
			k)
				k=1
				;;
			h)
				help
				exit 0
				;;
			f)
				f=1
				tmp_f=$OPTARG
				;;
			\?)
				echo -e "\033[1;31m未知选项\033[0m"
				echo -e "\033[1;36m输入\033[0m\"\033[1;31m-h\033[0m\"\033[1;36m查看帮助\033[0m"
				exit 1
				;;
		esac
	done
	if [[ $s == 1 || $i == 1 || $n == 1 || $u == 1 || $p == 1 ]]; then
		if [[ $s == 0 || $i == 0 || $n == 0 || $u == 0  || $p == 0 ]]; then
			echo -e "\033[1;31m缺少参数\033[0m:	[\033[1;36m-s Server \n		 -i Ip \n		 -n Name \n		 -u User \n		 -p Passwd\033[0m]	\033[1;32m登录信息（不使用配置文件）\033[0m"
			((error+=1))
		fi
	fi
	if [[ $error != 0 ]]; then
		echo -e "\033[1;36m输入\033[0m\"\033[1;31m-h\033[0m\"\033[1;36m查看帮助\033[0m"
		exit 1
	fi
}

# 获取配置
getconf(){
	if [[ $s == 1 ]]; then
		server=$tmp_s
		ip=$tmp_i
		name=$tmp_n
		user=$tmp_u
		passwd=$tmp_p
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在使用的信息如下\033[0m："
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m服务器\033[0m：\033[1;31m$server\033[0m"
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m本地主机\033[0m：\033[1;31m$ip\033[0m"
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m学校名字\033[0m：\033[1;31m$name\033[0m"
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m用户名\033[0m：\033[1;31m$user\033[0m"
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m密码\033[0m：\033[1;31m$passwd\033[0m"
	else
		if [ -f "$File" ];then
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在加载配置文件...\033[0m"
			source $File

			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在获取最新的配置信息...\033[0m"
			curl -s  baidu.com -i>/tmp/young.tmp
			grep -s  "Location: " /tmp/young.tmp >/tmp/young.conf

			server_tmp="$(cut -d "/" -f 3 /tmp/young.conf 2>&1)"
			if [ "$server_tmp" != ""  ];then
				server=$server_tmp
			fi

			cut -d "?" -f 2 /tmp/young.conf > /tmp/young.tmp.conf
			mv /tmp/young.tmp.conf /tmp/young.conf


			ip_tmp="$(cut -d "=" -f 3 /tmp/young.conf 2>&1)"
			if [ "$ip_tmp" != ""  ];then
				echo $ip_tmp>/tmp/young.tmp.conf
				ip_tmp="$(sed 's/\r//g' /tmp/young.tmp.conf)"
				rm /tmp/young.tmp.conf
				ip=$ip_tmp
			fi

			cut -d "&" -f 1 /tmp/young.conf > /tmp/young.tmp.conf
			mv /tmp/young.tmp.conf /tmp/young.conf

			name_tmp="$(cut -d "=" -f 2 /tmp/young.conf 2>&1)"
			if [ "$name_tmp" != ""  ];then
				name=$name_tmp
			fi

			rm /tmp/young.conf

			echo server=$server > $File
			echo ip=$ip>> $File
			echo name=$name>> $File
			echo user=$user>> $File
			echo passwd=$passwd>> $File

			if [[ $server == "" ]]; then
				server="未知"
			fi
			if [[ $ip == "" ]]; then
				ip="未知"
			fi
			if [[ $name == "" ]]; then
				name="未知"
			fi
			if [[ $user == "" ]]; then
				user="未知"
			fi
			if [[ $passwd == "" ]]; then
				passwd="未知"
			fi

			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在使用的信息如下\033[0m："
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m服务器\033[0m：\033[1;31m$server\033[0m"
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m本地主机\033[0m：\033[1;31m$ip\033[0m"
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m学校名字\033[0m：\033[1;31m$name\033[0m"
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m用户名\033[0m：\033[1;31m$user\033[0m"
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m密码\033[0m：\033[1;31m$passwd\033[0m"

		else
			echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在获取最新的配置信息...\033[0m"
		  curl -s  baidu.com -i>/tmp/young.tmp
		  grep -s  "Location: " /tmp/young.tmp >/tmp/young.conf

		  server_tmp="$(cut -d "/" -f 3 /tmp/young.conf 2>&1)"
		  if [ "$server_tmp" != ""  ];then
		    server=$server_tmp
		    fi

		    cut -d "?" -f 2 /tmp/young.conf > /tmp/young.tmp.conf
		    mv /tmp/young.tmp.conf /tmp/young.conf


		    ip_tmp="$(cut -d "=" -f 3 /tmp/young.conf 2>&1)"
		    if [ "$ip_tmp" != ""  ];then
		    echo $ip_tmp>/tmp/young.tmp.conf
		    ip_tmp="$(sed 's/\r//g' /tmp/young.tmp.conf)"
		    rm /tmp/young.tmp.conf
		    ip=$ip_tmp
		    fi

		    cut -d "&" -f 1 /tmp/young.conf > /tmp/young.tmp.conf
		    mv /tmp/young.tmp.conf /tmp/young.conf

		    name_tmp="$(cut -d "=" -f 2 /tmp/young.conf 2>&1)"
		    if [ "$name_tmp" != ""  ];then
		    name=$name_tmp
		    fi

		    rm /tmp/young.conf

		    echo server=$server > $File
		    echo ip=$ip>> $File
		    echo name=$name>> $File
		    echo user=$user>> $File
		    echo passwd=$passwd>> $File

				if [[ $server == "" ]]; then
					server="未知"
				fi
				if [[ $ip == "" ]]; then
					ip="未知"
				fi
				if [[ $name == "" ]]; then
					name="未知"
				fi
				if [[ $user == "" ]]; then
					user="未知"
				fi
				if [[ $passwd == "" ]]; then
					passwd="未知"
				fi
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在使用的信息如下\033[0m："
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m服务器\033[0m：\033[1;31m$server\033[0m"
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m本地主机\033[0m：\033[1;31m$ip\033[0m"
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m学校名字\033[0m：\033[1;31m$name\033[0m"
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m用户名\033[0m：\033[1;31m$user\033[0m"
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36m密码\033[0m：\033[1;31m$passwd\033[0m"
				echo -e "\033[1;32m[IFO]\033[0m \033[1;36mPlease edit the file\033[0m: \033[1;31m$File\033[0m"
				exit 0
		fi
	fi

}

# 登录
login(){
	echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在登陆...\033[0m"
	curl -s "http://$server/quickauth.do?wlanacname=$name&wlanuserip=$ip&userid=$user&passwd=$passwd" > /tmp/young.tmp
	result="$(cut -d '"' -f 8 /tmp/young.tmp 2>&1)"
	if [ "$result" != "" ];then
		echo $result
	fi
	while([ "认证成功" != "$result" ])
	do
		echo -e "\033[1;32m[IFO]\033[0m \033[1;31m登陆失败...\033[0m"
		sleep 2s
		echo -e "\033[1;32m[IFO]\033[0m \033[1;36m正在重试...\033[0m"
		curl -s "http://$server/quickauth.do?wlanacname=$name&wlanuserip=$ip&userid=$user&passwd=$passwd" > /tmp/young.tmp
		result="$(cut -d '"' -f 8 /tmp/young.tmp 2>&1)"
		if [ "$result" != "" ];then
			echo $result
		fi
	done
}
# 保持存活
keeplive(){
	while (true)
	do
		sleep 15s
		curl -s "http://$server/quickauth.do?wlanacname=$name&wlanuserip=$ip&userid=$user&passwd=$passwd" > /dev/null
		echo keeplive
	done
}
# 检查配置
checkconf(){
	if [[ $server == "未知" || $ip == "未知" || $name == "未知" || $user == "未知" || $passwd == "未知" ]]; then
		echo -e "\033[1;32m[IFO]\033[0m \033[1;31m信息错误！！\033[0m"
		exit 1
	fi
}

# 入口
main(){
	check $@
	if [[ $f == 1 ]]; then
		File=$tmp_f
	fi
	getconf
	checkconf
	login
	if [[ $k == 1 ]];then
		keeplive
	fi
}

main $@
